<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>headscale on johnpoint&#39;s blog</title>
    <link>https://blog.lvcshu.com/tags/headscale/</link>
    <description>Recent content in headscale on johnpoint&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 04 Nov 2022 10:00:00 +0800</lastBuildDate>
    <atom:link href="https://blog.lvcshu.com/tags/headscale/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 headscale 异地组网</title>
      <link>https://blog.lvcshu.com/2022/11/04/deploy-headscale/</link>
      <pubDate>Fri, 04 Nov 2022 10:00:00 +0800</pubDate>
      <guid>https://blog.lvcshu.com/2022/11/04/deploy-headscale/</guid>
      <description>很久之前看过柠檬大佬的使用 N2N 进行异地组网的文章，大受震撼，但是 N2N 的部署体验很难说得上令人愉悦。
然后就听说了 wireguard 被加入 linux 内核，以下是 wireguard 的介绍：
WireGuard是由Jason A. Donenfeld开发的开放源代码VPN程序及协议[1]，基于Linux内核实现，利用Curve25519进行密钥交换，ChaCha20用于加密，Poly1305用于数据认证，BLAKE2用于散列函数运算[1]，支持IPv4和IPv6的第3层。[2]WireGuard旨在获得比IPsec和OpenVPN更好的性能[3]。
确实，wireguard 性能十分不错，但是配置实在是过于繁琐了，如果要往 wireguard 网络中加入一台设备，则需要修改几乎所有连入网络设备的配置文件，实在是太麻烦了，好在现在已经有了 tailscale 这个服务提供商提供了基于 wireguard 的 0 配置的 VPN 组网方案。
而 headscale 就是 tailscale 中控服务端的开源版本，开源版本支持自己部署，同时没有连入设备的数量限制，于是我花了一点时间将 headscale 部署了一下。
使用到的项目 Github:juanfont/headscale Github:gurucomputing/headscale-ui
部署 headscale 这里我使用 docker-componse 进行部署
version: &amp;#39;3.5&amp;#39; services: headscale: image: headscale/headscale:latest-alpine container_name: headscale volumes: - ./container-config:/etc/headscale - ./container-data/data:/var/lib/headscale ports: - 27896:8080 command: headscale serve restart: unless-stopped headscale-ui: image: ghcr.io/gurucomputing/headscale-ui:latest restart: unless-stopped container_name: headscale-ui ports: - 9443:443 同时我还使用了nginx来进行反向代理，将 headscale-ui 和 headscale 分别部署在了不同的域名下面，因此要做一些 CORS 的处理，Nginx 配置文件参考如下</description>
    </item>
  </channel>
</rss>
