<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>johnpoint&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.lvcshu.com/"/>
  <updated>2019-06-06T13:59:01.317Z</updated>
  <id>https://blog.lvcshu.com/</id>
  
  <author>
    <name>johnpoint</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ubuntu 安装 rtl8821ce 驱动</title>
    <link href="https://blog.lvcshu.com/2019/06/06/ubuntu%E5%AE%89%E8%A3%85rtl8821ce%E9%A9%B1%E5%8A%A8/"/>
    <id>https://blog.lvcshu.com/2019/06/06/ubuntu安装rtl8821ce驱动/</id>
    <published>2019-06-06T13:51:00.000Z</published>
    <updated>2019-06-06T13:59:01.317Z</updated>
    
    <content type="html"><![CDATA[<p><del>电脑又出问题了</del><a id="more"></a></p><p>升级了 ubuntu 19.04 以后我发现因为内核的更新，<a href="https://blog.lvcshu.com/2018/08/25/Ubuntu安装-thinkpad-S2-无线网卡驱动/">之前的驱动安装方法</a> 已经失效了，所以就去寻找了新的安装方法</p><h1 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h1><ul><li><a href="https://github.com/tomaspinho/rtl8821ce" target="_blank" rel="noopener">tomaspinho/rtl8821ce</a></li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install dkms git -y</span><br><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/tomaspinho/rtl8821ce</span><br><span class="line">cd rtl8821ce</span><br></pre></td></tr></table></figure><p><strong>注意：之后就要断网，我是直接关掉了网络服务</strong></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./dkms-<span class="keyword">install</span>.sh</span><br></pre></td></tr></table></figure><p>完成后加载模块<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo modprobe <span class="number">8821</span>ce</span><br></pre></td></tr></table></figure></p><p>完成撒花～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;电脑又出问题了&lt;/del&gt;
    
    </summary>
    
    
      <category term="ubuntu" scheme="https://blog.lvcshu.com/tags/ubuntu/"/>
    
      <category term="rtl8821ce" scheme="https://blog.lvcshu.com/tags/rtl8821ce/"/>
    
  </entry>
  
  <entry>
    <title>修复Chrome色差问题</title>
    <link href="https://blog.lvcshu.com/2019/06/04/%E4%BF%AE%E5%A4%8DChrome%E8%89%B2%E5%B7%AE%E9%97%AE%E9%A2%98/"/>
    <id>https://blog.lvcshu.com/2019/06/04/修复Chrome色差问题/</id>
    <published>2019-06-04T07:54:20.000Z</published>
    <updated>2019-06-04T08:02:07.400Z</updated>
    
    <content type="html"><![CDATA[<p>在几次使用 Chrome 发现了网页的色彩渲染似乎有些问题<a id="more"></a></p><p>如图</p><p><img src="https://cdn.lvcshu.info/img/20190604001.png" alt="左:telegram 预览图 右:Chrome 渲染图"></p><p>可以很明显的发现色彩不一致，一开始我还以为是我的显示器的问题，直到发现了上面那一张图。</p><p>然后经过简单的搜索我也得到了<a href="https://segmentfault.com/a/1190000012818983" target="_blank" rel="noopener">修复的方法</a></p><p>打开 <a href="chrome://flags/#force-color-profile" target="_blank" rel="noopener">chrome://flags/#force-color-profile</a>，将色彩配置设置为sRGB</p><p><img src="https://cdn.lvcshu.info/img/20190604003.jpeg" alt=""></p><p>调整好以后效果就是这样的啦~</p><p><img src="https://cdn.lvcshu.info/img/20190604002.png" alt="左:telegram 预览图 右:Chrome 渲染图"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在几次使用 Chrome 发现了网页的色彩渲染似乎有些问题
    
    </summary>
    
    
      <category term="Chrome" scheme="https://blog.lvcshu.com/tags/Chrome/"/>
    
      <category term="色差" scheme="https://blog.lvcshu.com/tags/%E8%89%B2%E5%B7%AE/"/>
    
  </entry>
  
  <entry>
    <title>优化Bash控制台显示</title>
    <link href="https://blog.lvcshu.com/2019/05/28/%E4%BC%98%E5%8C%96Bash%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%98%BE%E7%A4%BA/"/>
    <id>https://blog.lvcshu.com/2019/05/28/优化Bash控制台显示/</id>
    <published>2019-05-28T13:14:30.000Z</published>
    <updated>2019-05-28T13:23:26.090Z</updated>
    
    <content type="html"><![CDATA[<p>=。=<a id="more"></a></p><p>给我的 Ubuntu 控制台窗口做了一些优化 (?)</p><p>因为觉得原来默认的 Bash 太丑了</p><p>就像这样</p><p><img src="https://cdn.lvcshu.info/img/20190528001.png" alt=""></p><p>然后现在改成了这样</p><p><img src="https://cdn.lvcshu.info/img/20190528002.png" alt=""></p><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><p>修改 <code>.bashrc</code></p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export PS1="[ <span class="symbol">\[</span><span class="symbol">\0</span>33[1;32m<span class="symbol">\]</span><span class="symbol">\W</span><span class="symbol">\[</span><span class="symbol">\0</span>33[0m<span class="symbol">\]</span><span class="symbol">\]</span><span class="symbol">\[</span><span class="symbol">\0</span>33[1;32m<span class="symbol">\[</span><span class="symbol">\0</span>33[0m<span class="symbol">\]</span> ] $ "</span><br><span class="line">alias short='export PS1="[ <span class="symbol">\[</span><span class="symbol">\0</span>33[1;32m<span class="symbol">\]</span><span class="symbol">\W</span><span class="symbol">\[</span><span class="symbol">\0</span>33[0m<span class="symbol">\]</span><span class="symbol">\]</span><span class="symbol">\[</span><span class="symbol">\0</span>33[1;32m<span class="symbol">\[</span><span class="symbol">\0</span>33[0m<span class="symbol">\]</span> ] $ "'</span><br><span class="line">alias long='export PS1="[ <span class="symbol">\[</span><span class="symbol">\0</span>33[1;33m<span class="symbol">\]</span><span class="symbol">\u</span> <span class="symbol">\[</span><span class="symbol">\0</span>33[1;32m<span class="symbol">\]</span><span class="symbol">\w</span><span class="symbol">\[</span><span class="symbol">\0</span>33[0m<span class="symbol">\]</span> ] $ " '</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;=。=
    
    </summary>
    
    
      <category term="Ubuntu" scheme="https://blog.lvcshu.com/tags/Ubuntu/"/>
    
      <category term="Bash" scheme="https://blog.lvcshu.com/tags/Bash/"/>
    
      <category term="美化" scheme="https://blog.lvcshu.com/tags/%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>和平精英有感</title>
    <link href="https://blog.lvcshu.com/2019/05/12/%E5%92%8C%E5%B9%B3%E7%B2%BE%E8%8B%B1%E6%9C%89%E6%84%9F/"/>
    <id>https://blog.lvcshu.com/2019/05/12/和平精英有感/</id>
    <published>2019-05-12T14:57:00.000Z</published>
    <updated>2019-05-20T04:27:41.333Z</updated>
    
    <content type="html"><![CDATA[<p>最近刺激战场正式结束了公测并且改名成为和平精英<del>割草</del>正式经营<a id="more"></a></p><p>按理来说这个游戏跟我是没有啥关系的，反正我又不玩，但是腾讯这种为了过审而采取的策略真的是emmmmm一言难尽</p><p>就很奇怪，固然，血腥的内容的确有可能对青少年的身心发展有所影响，但是将血腥的内容魔改了以后会不会对青少年的世界观的形成产生影响呢？</p><p>最近还看到了一个很滑稽的新闻（当然这新闻是编的）</p><blockquote><p>【少年失手打死人却不承认：他没有和我挥手】<br>2035年，某地发生一起少年恶性伤人事件，一名17岁少年在和11岁少年争抢喜羊羊玩具时失手将对方打死。但17岁少年被逮捕后拒不承认杀人事实，他理由是对方只是装模作样流了些红色液体，并没有死，该少年甚至还反问，<br>“他要是真死了，为什么不向我挥手？”<br>来源: <a href="https://t.me/XiaoNa_QAQ/2277" target="_blank" rel="noopener">https://t.me/XiaoNa_QAQ/2277</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近刺激战场正式结束了公测并且改名成为和平精英&lt;del&gt;割草&lt;/del&gt;正式经营
    
    </summary>
    
    
      <category term="胡掰" scheme="https://blog.lvcshu.com/tags/%E8%83%A1%E6%8E%B0/"/>
    
      <category term="腾讯" scheme="https://blog.lvcshu.com/tags/%E8%85%BE%E8%AE%AF/"/>
    
      <category term="和平精英" scheme="https://blog.lvcshu.com/tags/%E5%92%8C%E5%B9%B3%E7%B2%BE%E8%8B%B1/"/>
    
      <category term="审查制度" scheme="https://blog.lvcshu.com/tags/%E5%AE%A1%E6%9F%A5%E5%88%B6%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>Android Q 初体验</title>
    <link href="https://blog.lvcshu.com/2019/05/10/Android-Q-%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>https://blog.lvcshu.com/2019/05/10/Android-Q-初体验/</id>
    <published>2019-05-10T05:29:57.000Z</published>
    <updated>2019-05-10T05:47:19.869Z</updated>
    
    <content type="html"><![CDATA[<p>最近开的 Google I/O 大会公布了 Android Q beta3 的几款适配的机型，我的 Oneplus 6 恰好也在其中<a id="more"></a></p><p>开心!!</p><p>然后今天在刷入了 Android Q beta3 OOS 版后发现了不少的问题，毕竟 BETA 嘛，还不是正式版本，也可以理解，主要我能体验到的几点是:</p><ul><li>通知栏图标太大了</li><li>快捷键 <strong>只有</strong> 三大金刚 说好的全面屏手势呢？</li><li>设置了 PIN 码以后如果重启手机的话是 <strong>不能</strong> 成功的通过验证的</li><li>指纹解锁是 <strong>无效</strong> 的</li><li>SmartLock 内 <strong>没有</strong> 面部解锁</li><li>Google Assistant <strong>不能</strong> 通过 ‘OK，google’ 唤醒</li><li>通知采用的是右滑消除，左滑会有延迟提醒等更多的功能，行为模式需要一定的时间习惯</li><li>权限管理细致了许多</li><li>流畅度在我的体验里面没有特别的改变</li><li>USB 传文件似乎会导致系统错误？？（遇到过一次没有严格证实</li><li>动画的渐变变得更好看了</li><li>似乎没有找到隐藏刘海的选项</li></ul><h1 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h1><p>记录下 adb 跳过手机开机设置向导的方法，实测有效!!</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb shell<span class="built_in"> settings </span>put secure user_setup_complete 1</span><br><span class="line">adb shell<span class="built_in"> settings </span>put global device_provisioned 1</span><br></pre></td></tr></table></figure><p>然后重启</p><blockquote><p>此方法来源于: <a href="https://www.jianshu.com/p/1776170650d5" target="_blank" rel="noopener">Android 跳过Gapps开机引导</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近开的 Google I/O 大会公布了 Android Q beta3 的几款适配的机型，我的 Oneplus 6 恰好也在其中
    
    </summary>
    
    
      <category term="折腾" scheme="https://blog.lvcshu.com/tags/%E6%8A%98%E8%85%BE/"/>
    
      <category term="Android" scheme="https://blog.lvcshu.com/tags/Android/"/>
    
      <category term="初体验" scheme="https://blog.lvcshu.com/tags/%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>安装Arch笔记</title>
    <link href="https://blog.lvcshu.com/2019/05/07/%E5%AE%89%E8%A3%85Arch%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.lvcshu.com/2019/05/07/安装Arch笔记/</id>
    <published>2019-05-07T14:53:00.000Z</published>
    <updated>2019-05-07T15:19:25.248Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Arch Linux（或 Arch /ˈɑːrtʃ/)）是一款基于 x86-64 架构的 Linux发行版。<br><a id="more"></a></p></blockquote><blockquote><p>Arch Linux 采用滚动发行模式来获取系统更新和软件的最新版本。系统安装映像只简单地包含系统主要组件。</p></blockquote><blockquote><p>Arch Linux 以社区 Wiki 的形式提供文档，称为 <a href="https://www.archlinux.org/" target="_blank" rel="noopener">ArchWiki</a>。该 Wiki 经常编有特定主题的最新信息，受到了 Linux 社区的广泛认可，内容也应用在 Arch Linux 以外的领域。</p></blockquote><p>这三句话贯穿了我安装 Arch 全过程，就记录一下 <del>免得我忘了</del> 吧。</p><h1 id="下载安装镜像"><a href="#下载安装镜像" class="headerlink" title="下载安装镜像"></a>下载安装镜像</h1><p>安装镜像很小，直接下载即可</p><p><a href="https://www.archlinux.org/download/" target="_blank" rel="noopener">&gt;&gt;传送门&lt;&lt;</a></p><h1 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h1><ul><li>VirtualBox Graphical User Interface Version 5.2.18_Ubuntu r123745<ul><li>Memory: 4096 MB</li><li>CPU: 4</li><li>BIOS 启动</li><li>Storage: 35 GB</li><li>Network: NAT</li></ul></li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="验证网络连接"><a href="#验证网络连接" class="headerlink" title="验证网络连接"></a>验证网络连接</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ping</span> archlinux<span class="meta">.org</span></span><br></pre></td></tr></table></figure><h2 id="更新系统时间"><a href="#更新系统时间" class="headerlink" title="更新系统时间"></a>更新系统时间</h2><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">timedatectl </span><span class="built_in">set-ntp</span> <span class="string">true</span></span><br></pre></td></tr></table></figure><h3 id="设置分区"><a href="#设置分区" class="headerlink" title="设置分区"></a>设置分区</h3><h4 id="硬盘分区"><a href="#硬盘分区" class="headerlink" title="硬盘分区"></a>硬盘分区</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk <span class="regexp">/dev/</span>sda</span><br></pre></td></tr></table></figure><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入 <span class="built_in">n</span> 新建分区</span><br><span class="line">然后一路回车默认</span><br><span class="line">最后 w 改变写入硬盘</span><br></pre></td></tr></table></figure><h4 id="格式化分区"><a href="#格式化分区" class="headerlink" title="格式化分区"></a>格式化分区</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs<span class="selector-class">.ext4</span> /dev/sda1</span><br></pre></td></tr></table></figure><h2 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><h4 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount <span class="string">/dev/sda1</span> <span class="string">/mnt</span></span><br></pre></td></tr></table></figure><h4 id="设置软件源"><a href="#设置软件源" class="headerlink" title="设置软件源"></a>设置软件源</h4><p>在 Wiki 的 <a href="https://wiki.archlinux.org/index.php/Mirrors_(简体中文" target="_blank" rel="noopener">镜像源</a>#中国)页面挑选适合的镜像。</p><p>我选择阿里的源</p><p>编辑源列表<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/etc/</span>pacman.d<span class="regexp">/mirrorlist</span></span><br></pre></td></tr></table></figure></p><p>添加<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Server = http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/archlinux/</span><span class="variable">$repo</span><span class="regexp">/os/</span><span class="variable">$arch</span></span><br></pre></td></tr></table></figure></p><h3 id="安装基础系统"><a href="#安装基础系统" class="headerlink" title="安装基础系统"></a>安装基础系统</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacstrap /mnt <span class="keyword">base</span> <span class="keyword">base</span>-devel</span><br></pre></td></tr></table></figure><h3 id="设置新安装的系统"><a href="#设置新安装的系统" class="headerlink" title="设置新安装的系统"></a>设置新安装的系统</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">genfstab -U <span class="regexp">/mnt &gt;&gt; /m</span>nt<span class="regexp">/etc/</span>fstab</span><br></pre></td></tr></table></figure><p>切换到新系统<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arch-chroot <span class="string">/mnt</span></span><br></pre></td></tr></table></figure></p><h4 id="安装必要的软件"><a href="#安装必要的软件" class="headerlink" title="安装必要的软件"></a>安装必要的软件</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">pacman -S vim nano</span></span><br></pre></td></tr></table></figure><h4 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h4><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -sf <span class="meta-keyword">/usr/</span>share<span class="meta-keyword">/zoneinfo/</span>Asia/Shanghai <span class="meta-keyword">/etc/</span>localtime</span><br><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure><h4 id="设置本地化文本编码"><a href="#设置本地化文本编码" class="headerlink" title="设置本地化文本编码"></a>设置本地化文本编码</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano <span class="regexp">/etc/</span>locale.gen</span><br></pre></td></tr></table></figure><p>加入<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zh_CN.UTF<span class="number">-8</span> UTF<span class="number">-8</span></span><br></pre></td></tr></table></figure></p><p>执行<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">locale-gen</span></span><br></pre></td></tr></table></figure></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano <span class="regexp">/etc/</span>locale.conf</span><br></pre></td></tr></table></figure><p>加入<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">LANG</span>=en_US.UTF-<span class="number">8</span></span><br></pre></td></tr></table></figure></p><h4 id="设置-hostname-amp-amp-HOST"><a href="#设置-hostname-amp-amp-HOST" class="headerlink" title="设置 hostname &amp;&amp; HOST"></a>设置 hostname &amp;&amp; HOST</h4><p>编辑 <code>/etc/hostname</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano <span class="regexp">/etc/</span>hosts</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span>   <span class="selector-tag">localhost</span></span><br><span class="line"><span class="selector-pseudo">::1</span>         <span class="selector-tag">localhost</span></span><br><span class="line">127<span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-class">.1</span>   <span class="selector-tag">arch</span><span class="selector-class">.localdomain</span>  <span class="selector-tag">arch</span></span><br></pre></td></tr></table></figure><h4 id="账户设置"><a href="#账户设置" class="headerlink" title="账户设置"></a>账户设置</h4><h5 id="修改-root-密码"><a href="#修改-root-密码" class="headerlink" title="修改 root 密码"></a>修改 root 密码</h5><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">passwd</span></span><br></pre></td></tr></table></figure><h5 id="添加账户"><a href="#添加账户" class="headerlink" title="添加账户"></a>添加账户</h5><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">useradd -m johnpoint</span></span><br><span class="line"><span class="attribute">passwd johnpoint</span></span><br></pre></td></tr></table></figure><h4 id="设置开机引导"><a href="#设置开机引导" class="headerlink" title="设置开机引导"></a>设置开机引导</h4><h5 id="安装-Grub"><a href="#安装-Grub" class="headerlink" title="安装 Grub"></a>安装 Grub</h5><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">pacman -S grub</span></span><br></pre></td></tr></table></figure><h5 id="部署-Grub"><a href="#部署-Grub" class="headerlink" title="部署 Grub"></a>部署 Grub</h5><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grub-install <span class="params">--target=i386-pc</span> <span class="string">/dev/sda</span></span><br><span class="line">grub-mkconfig -o <span class="string">/boot/grub/grub.cfg</span></span><br></pre></td></tr></table></figure><p>至此，arch 就安装完成了，图形界面什么的 <del>咕咕咕</del> 下次再说</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Arch Linux（或 Arch /ˈɑːrtʃ/)）是一款基于 x86-64 架构的 Linux发行版。&lt;br&gt;
    
    </summary>
    
    
      <category term="折腾" scheme="https://blog.lvcshu.com/tags/%E6%8A%98%E8%85%BE/"/>
    
      <category term="学习笔记" scheme="https://blog.lvcshu.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Arch" scheme="https://blog.lvcshu.com/tags/Arch/"/>
    
  </entry>
  
  <entry>
    <title>博客支持 TLS 1.3</title>
    <link href="https://blog.lvcshu.com/2019/04/11/%E5%8D%9A%E5%AE%A2%E6%94%AF%E6%8C%81TLS-1.3/"/>
    <id>https://blog.lvcshu.com/2019/04/11/博客支持TLS-1.3/</id>
    <published>2019-04-11T01:36:00.000Z</published>
    <updated>2019-04-11T13:48:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>博客终于在无数次的 想配置 TLS1.3 和 “啊好麻烦啊，不上了” 中一直没有上 TLS1.3<br><a id="more"></a></p><p>借着更新 <a href="https://github.com/johnpoint/DNMP-lvcshu" target="_blank" rel="noopener">DNMP-lvcshu</a> 项目中的 NGINX 模块，顺便把 TLS1.3 的支持给加上了，其实也没有做啥改变，就把 NGINX 的版本升级到了 <code>1.15.11</code> 就好了 <del>其实是我太菜</del></p><p>然后项目里 NGINX 的本来基于 UBUNTU 的镜像换成了 alpine 版本的镜像，体积： 45MB –&gt; 7MB，更加轻量化了呢。</p><p>最麻烦的还是修改配置文件，毕竟每一个网站都要手动加上 TLS1.3 的相关配置，看起来分发 NGINX 配置文件的小工具也要提上日程了呢（<del>四面杵鸽.jpg</del></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;博客终于在无数次的 想配置 TLS1.3 和 “啊好麻烦啊，不上了” 中一直没有上 TLS1.3&lt;br&gt;
    
    </summary>
    
    
      <category term="https" scheme="https://blog.lvcshu.com/tags/https/"/>
    
      <category term="TLS" scheme="https://blog.lvcshu.com/tags/TLS/"/>
    
      <category term="DNMP" scheme="https://blog.lvcshu.com/tags/DNMP/"/>
    
      <category term="nginx" scheme="https://blog.lvcshu.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>我们已经被微信捆住了</title>
    <link href="https://blog.lvcshu.com/2019/04/03/%E6%88%91%E4%BB%AC%E5%B7%B2%E7%BB%8F%E8%A2%AB%E5%BE%AE%E4%BF%A1%E6%8D%86%E4%BD%8F%E4%BA%86/"/>
    <id>https://blog.lvcshu.com/2019/04/03/我们已经被微信捆住了/</id>
    <published>2019-04-03T09:41:00.000Z</published>
    <updated>2019-04-03T11:22:11.195Z</updated>
    
    <content type="html"><![CDATA[<p>我们已经被微信捆住了<a id="more"></a></p><h1 id="先看看"><a href="#先看看" class="headerlink" title="先看看"></a>先看看</h1><p><a href="https://weixin.qq.com/" target="_blank" rel="noopener">微信，是一个生活方式</a></p><p><a href="https://blog.yitianshijie.net/2018/02/02/wechat-equals-gfw/" target="_blank" rel="noopener">微信= GFW – 一天世界</a></p><h1 id="先说好话"><a href="#先说好话" class="headerlink" title="先说好话"></a>先说好话</h1><p><del>不可否认的是腾讯的微信的产生的确是即时通信软件的一个巨大的进步</del> 不对啊…其实都知道微信的一些功能其实并不是自己原创的，但是还是得益于微信的诞生使得熟人社交走进了我们的视线，balabala懒得吹下去了</p><h1 id="各种群"><a href="#各种群" class="headerlink" title="各种群"></a>各种群</h1><p>就我的感觉而言，微信<strong>不是</strong>一个恰当的通知发放的平台，有几点原因：</p><ul><li>成员权限管理缺失</li><li>同时只能容纳一条群通知</li><li>消息各平台不能同步</li><li>消息无云端备份</li><li>消息排版几乎没有</li></ul><p>首先，群员权限管理严重残废导致微信群内是<strong>不能</strong>进行禁言的操作的。</p><p>而且，群友们显而易见的是一个比较容易忽略禁言令的群体。</p><p>从而，导致了明明群名挂着的 <strong>禁言</strong> 形同虚设，通知与刷屏齐飞，往往不能很方便的看到通知。</p><p>然后，微信的群公告是藏在微信群详情的菜单里面的，而展现在对话区域的内容与其他一般的聊天内容相比只是多出了 <code>@所有人</code> 这几个字，没有明显的<strong>区分度</strong>。</p><p>更别说微信自己引以为傲的不保存聊天记录所以不能做到云备份聊天数据了，<a href="http://www.sohu.com/a/287819049_162645" target="_blank" rel="noopener">保存没有保存腾讯自己心里应该有数</a>，就造成了微信的聊天记录其实是<strong>不可靠</strong>的。</p><h1 id="各种被要求关注的公众号"><a href="#各种被要求关注的公众号" class="headerlink" title="各种被要求关注的公众号"></a>各种被要求关注的公众号</h1><p>就以共青团员要关注的公众号来说，其实感觉已经比较过分了，从一开始的 <strong>广东共青团</strong> 到 <strong>广东青年之声</strong> 再到 <strong>广东学联</strong>，做个团员也太麻烦了吧，如果说关注一个公众号进行通知推送尚可理解，但是 <strong>强迫</strong> 关注三个公众号未免有点过分</p><h1 id="微信的封闭"><a href="#微信的封闭" class="headerlink" title="微信的封闭"></a>微信的封闭</h1><p>不可否认的是微信的生态是业内的领先水平，但是对于我这样的自由爱好者来说，微信的生态从另一种层面来说就是一种封闭的表现，从微信聊天到公众号的休闲阅读再到微信支付，体验的一致感是有了，但是流量一经微信的入口，就几乎没有任何出口再次让流量进入自由的互联网了，微信仿佛互联网上的孤岛，看似链接了互联网的丰富内容，其实你永远处于微信的牢笼里。</p><h1 id="微信真的成为了生活方式"><a href="#微信真的成为了生活方式" class="headerlink" title="微信真的成为了生活方式"></a>微信真的成为了生活方式</h1><p>最后的最后，我是真的没有想到，真的会有人<strong>发短信</strong>让我去<strong>看微信</strong>…</p><p><img src="https://cdn.lvcshu.info/img/20190403001.jpg" alt=""></p><p>微信像一条绳子，先把一部分人捆住了，然后再让那一部分人把另一部分人捆住。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们已经被微信捆住了
    
    </summary>
    
    
      <category term="微信" scheme="https://blog.lvcshu.com/tags/%E5%BE%AE%E4%BF%A1/"/>
    
      <category term="封闭" scheme="https://blog.lvcshu.com/tags/%E5%B0%81%E9%97%AD/"/>
    
  </entry>
  
  <entry>
    <title>初探 Proxmox VE</title>
    <link href="https://blog.lvcshu.com/2019/03/17/%E5%88%9D%E6%8E%A2Proxmox-VE/"/>
    <id>https://blog.lvcshu.com/2019/03/17/初探Proxmox-VE/</id>
    <published>2019-03-17T03:36:00.000Z</published>
    <updated>2019-03-17T07:24:48.735Z</updated>
    
    <content type="html"><![CDATA[<p>一直好奇主机商们是怎么把一台独立服务器分成 VPS 来售卖的，这几天就去玩了 下 Proxmox VE<br><a id="more"></a><br><img src="https://cdn.lvcshu.info/img/20190317001.jpg" alt=""></p><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Ubuntu 18.04.2 桌面版</li><li>VirtualBox Graphical User Interface Version 5.2.18_Ubuntu r123745</li><li>Proxmox-ve_5.3-2</li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>由于我手头上实在是没有空余的机器，所以我向我的笔记本 <del>伸出了邪恶的手</del> ，新建了一个虚拟机，分配给它 4G 内存， 50G 硬盘 。安装时候直接在 <a href="https://www.proxmox.com/en/downloads" target="_blank" rel="noopener">官网-下载</a> 下载 <code>Proxmox VE 5.3 ISO Installer</code> iso 镜像，像平时安装系统一样安装上去，完全傻瓜式。</p><p>安装好以后就会提示你登录并给了你一个网页的地址，就像这样</p><p><img src="https://cdn.lvcshu.info/img/20190317002.png" alt=""></p><p>但是我们的是虚拟机所以需要在 <code>Settings-&gt;Network-&gt;Adapter 1-&gt;Advanced-&gt;Port Forwarding</code> 配置端口转发</p><p>然后在浏览器访问 <code>https://127.0.0.1:映射的端口</code> 就可以看见面板了。</p><p><img src="https://cdn.lvcshu.info/img/20190317003.png" alt=""></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>面板的右上角有 <code>[创建虚拟机]</code> <code>[创建 CT]</code> 的按钮，分别对应虚拟化技术 KVM 以及 OpenVZ（LXC？）</p><h2 id="镜像下载"><a href="#镜像下载" class="headerlink" title="镜像下载"></a>镜像下载</h2><h3 id="KVM"><a href="#KVM" class="headerlink" title="KVM"></a>KVM</h3><p>直接下载官方的安装镜像，并把镜像放置在  </p><p><code>/var/lib/vz/template/iso</code></p><h3 id="OpenVZ"><a href="#OpenVZ" class="headerlink" title="OpenVZ"></a>OpenVZ</h3><p>需要到 OpenVZ 官网的 <a href="https://wiki.openvz.org/Download/template/precreated" target="_blank" rel="noopener">下载页面</a> 下载</p><p>放置目录是</p><p><code>/var/lib/vz/template/cache</code></p><h2 id="网卡-amp-NAT"><a href="#网卡-amp-NAT" class="headerlink" title="网卡 &amp; NAT"></a>网卡 &amp; NAT</h2><p>由于我是虚拟机开虚拟机，并且没有公网ip，所以我们需要通过 NAT(<strong>N</strong>etwork <strong>A</strong>ddress <strong>T</strong>ranslation)来对流量转发，<del>不然就是单机游戏啦</del></p><h2 id="母鸡的配置"><a href="#母鸡的配置" class="headerlink" title="母鸡的配置"></a>母鸡的配置</h2><p>编辑文件 <code>/etc/network/interfaces</code> 添加</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">auto vmbr2</span><br><span class="line">iface vmbr4 inet static</span><br><span class="line">        address  <span class="number">10.97</span><span class="number">.0</span><span class="number">.254</span></span><br><span class="line">        netmask  <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">        bridge-ports none</span><br><span class="line">        bridge-stp off</span><br><span class="line">        bridge-fd <span class="number">0</span></span><br><span class="line">        post-up echo <span class="number">1</span> &gt; /<span class="keyword">proc</span>/sys/net/ipv4/ip_forward</span><br><span class="line"><span class="title">        post-up</span> iptables -t<span class="title"> nat</span> -A<span class="title"> POSTROUTING</span> -s '10.97.0.0/24' -o<span class="title"> vmbr0</span> -j<span class="title"> MASQUERADE</span></span><br><span class="line"><span class="title"></span> <span class="title">       post-down</span> iptables -t<span class="title"> nat</span> -D<span class="title"> POSTROUTING</span> -s '10.97.0.0/24' -o<span class="title"> vmbr0</span> -j<span class="title"> MASQUERADE</span></span><br><span class="line"><span class="title"></span> <span class="title">       post-up</span> iptables -t<span class="title"> nat</span> -A<span class="title"> PREROUTING</span> -i<span class="title"> vmbr0</span> -p<span class="title"> tcp</span> --dport 1024 -j<span class="title"> DNAT</span> --to 10.97.0.1:22</span><br><span class="line"><span class="title">        post-down</span> iptables -t<span class="title"> nat</span> -D<span class="title"> PREROUTING</span> -i<span class="title"> vmbr0</span> -p<span class="title"> tcp</span> --dport 1024 -j<span class="title"> DNAT</span> --to 10.97.0.1:22</span><br></pre></td></tr></table></figure><p>然后执行 <code>/etc/init.d/networking restart</code></p><p>就能添加一张网卡，这张网卡主要是用于接下来的小鸡的流量转发用的，他会把所有的流量转向母鸡可以连接外网的网卡。</p><h2 id="小鸡的配置"><a href="#小鸡的配置" class="headerlink" title="小鸡的配置"></a>小鸡的配置</h2><p><img src="https://cdn.lvcshu.info/img/20190317004.png" alt=""></p><p>按照上面的信息随机应变 (?) 就好，网管要填 <strong>母鸡的IP</strong></p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips:"></a>Tips:</h1><ul><li>这里的配置主要是开 CT 容器，KVM 的或许以后会更 <del>咕咕咕</del></li><li>centos 7 的 OpenVZ 镜像貌似有问题，密码是没有办法输对的</li></ul><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>开了三台服务器～</p><p><img src="https://cdn.lvcshu.info/img/20190317005.png" alt=""></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.imfan.net/geek/20.html" target="_blank" rel="noopener">Proxmox VE三种方法配置NAT小鸡和IPv6地址</a></li><li><a href="http://www.zrblog.net/16527.html" target="_blank" rel="noopener">Proxmox VE安装和KVM开设教程</a></li><li><a href="https://teddysun.com/296.html" target="_blank" rel="noopener">OpenVZ安装指南</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直好奇主机商们是怎么把一台独立服务器分成 VPS 来售卖的，这几天就去玩了 下 Proxmox VE&lt;br&gt;
    
    </summary>
    
    
      <category term="Proxmox VE" scheme="https://blog.lvcshu.com/tags/Proxmox-VE/"/>
    
  </entry>
  
  <entry>
    <title>office 365 online 太好用啦!</title>
    <link href="https://blog.lvcshu.com/2019/03/02/office-365-online-%E5%A4%AA%E5%A5%BD%E7%94%A8%E5%95%A6/"/>
    <id>https://blog.lvcshu.com/2019/03/02/office-365-online-太好用啦/</id>
    <published>2019-03-02T12:40:00.000Z</published>
    <updated>2019-03-02T12:57:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>自从把主力的系统从 windows 转向了 ubuntu 了以后，感觉 ubuntu 实在是比 windows 要方便许多 （除了进行文档处理的操作以外）<a id="more"></a>，所以我一直以来使用的是 Google 推出的在线文档处理网站，基础功能是有了，但是远远没有微软的 office 成熟。我也曾经尝试过开源的 <a href="https://www.libreoffice.org/get-help/install-howto/linux/" target="_blank" rel="noopener">libreoffice</a> 以及 金山公司推出的 <a href="https://www.wps.com/en-US/office/linux" target="_blank" rel="noopener">WPS office for linux</a>。但是他们都各有缺点。一是与 M$ office 不是完美的兼容，二是软件体积臃肿，多出来很多没有必要存在的功能（说的就是 WPS ）。</p><p>然后我才发现了 <a href="https://www.office.com/" target="_blank" rel="noopener">office 365 online</a> 神器一般的存在，因为他几乎不会占据电脑的本地资源，与 M$ office 完全兼容，功能齐全(跟电脑上的桌面版已经没有什么区别了！！)，文件是储存在 onedrive 上的，非常方便。 爽到了啊！！！</p><p><img src="https://cdn.lvcshu.info/img/20190301001.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自从把主力的系统从 windows 转向了 ubuntu 了以后，感觉 ubuntu 实在是比 windows 要方便许多 （除了进行文档处理的操作以外）
    
    </summary>
    
    
      <category term="microsoft" scheme="https://blog.lvcshu.com/tags/microsoft/"/>
    
      <category term="office 365" scheme="https://blog.lvcshu.com/tags/office-365/"/>
    
  </entry>
  
  <entry>
    <title>Github commit添加verified标识</title>
    <link href="https://blog.lvcshu.com/2019/02/09/Github-commit%E6%B7%BB%E5%8A%A0verified%E6%A0%87%E8%AF%86/"/>
    <id>https://blog.lvcshu.com/2019/02/09/Github-commit添加verified标识/</id>
    <published>2019-02-09T11:07:00.000Z</published>
    <updated>2019-02-09T11:28:29.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这是一篇笔记</p></blockquote><blockquote><p>内容：Github commit添加verified标识<br><a id="more"></a><br><img src="https://cdn.lvcshu.info/img/20190209002.png" alt="效果图"></p></blockquote><p>就是一直以来都 <del>懒得</del> 忙得没有将这个事情做好 <del>但是其实这个东西好像并没有什么用</del></p><h1 id="用户端"><a href="#用户端" class="headerlink" title="用户端"></a>用户端</h1><h2 id="生成-GPG-密钥对"><a href="#生成-GPG-密钥对" class="headerlink" title="生成 GPG 密钥对"></a>生成 GPG 密钥对</h2><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg <span class="comment">--gen-key</span></span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --<span class="keyword">list</span>-<span class="built_in">keys</span></span><br></pre></td></tr></table></figure><p>列出 GPG 密钥对<br><img src="https://cdn.lvcshu.info/img/20190209003.png" alt="列出 GPG 密钥对"></p><h2 id="导出-public-文件"><a href="#导出-public-文件" class="headerlink" title="导出 public 文件"></a>导出 public 文件</h2><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gpg --armor --output public-<span class="built_in">key</span>.txt --export E081E7D64************<span class="number">29B7080083</span></span><br><span class="line">gpg --armor --output private-<span class="built_in">key</span>.txt --export-secret-keys</span><br></pre></td></tr></table></figure><h2 id="配置本地-Git"><a href="#配置本地-Git" class="headerlink" title="配置本地 Git"></a>配置本地 Git</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--global user.signingkey E081E7D64***********<span class="number">*29B7080083</span></span><br><span class="line">git<span class="built_in"> config </span>--global commit.gpgsign <span class="literal">true</span></span><br></pre></td></tr></table></figure><h1 id="Github-端"><a href="#Github-端" class="headerlink" title="Github 端"></a>Github 端</h1><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat <span class="keyword">public</span>-<span class="built_in">key</span>.txt</span><br></pre></td></tr></table></figure><p>将结果填入 <a href="https://github.com/settings/keys" target="_blank" rel="noopener">Personal settings-&gt;SSH and GPG keys</a></p><p>保存</p><p><img src="https://cdn.lvcshu.info/img/20190209004.png" alt="效果"></p><p>-EOF-</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这是一篇笔记&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;内容：Github commit添加verified标识&lt;br&gt;
    
    </summary>
    
    
      <category term="Github" scheme="https://blog.lvcshu.com/tags/Github/"/>
    
      <category term="verified" scheme="https://blog.lvcshu.com/tags/verified/"/>
    
      <category term="笔记" scheme="https://blog.lvcshu.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>app推荐:notify &amp; fitness for mi band</title>
    <link href="https://blog.lvcshu.com/2019/01/22/app%E6%8E%A8%E8%8D%90:notify%20&amp;%20fitness%20for%20mi%20band/"/>
    <id>https://blog.lvcshu.com/2019/01/22/app推荐:notify &amp; fitness for mi band/</id>
    <published>2019-01-22T13:21:00.000Z</published>
    <updated>2019-01-22T13:42:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>话说用了那么久小米手环，其实感觉还是比较不错的，唯一美中不足的就是小米手环的附属应用 <code>小米运动(mi fit)</code> <a id="more"></a>实在是令人失望，不仅仅是因为广告，而且他本身的功能并不是很周全，比如睡觉似乎只能统计在晚上的睡觉时间，而不能统计午觉。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>使用第三方 app </p><p><a href="https://play.google.com/store/apps/details?id=com.mc.miband1" target="_blank" rel="noopener">notify &amp; fitness for mi band</a></p><h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><ul><li>统计精度 比 小米运动 <strong>强</strong></li><li>可以全天统计睡眠</li><li>没有广告！！！</li><li>可以连接小米体重秤 与 小米运动 相比 <strong>毫不逊色</strong></li><li>专注 没有 <strong>乱七八糟</strong> 的社交功能</li><li><strong>更多</strong> 的自定义功能</li><li>可以连接 <code>Google fit</code></li><li><strong>无需</strong> 依赖 小米运动 </li></ul><h2 id="劣势"><a href="#劣势" class="headerlink" title="劣势"></a>劣势</h2><ul><li>专业功能需要专业版的授权 <strong>$3.14</strong> (反正我是果断购买了)</li><li>可定制选项 <strong>过多</strong> 所以可能容易使人 <strong>凌乱</strong> <del>可能是我比较蠢,哭</del></li></ul><h2 id="软件截图"><a href="#软件截图" class="headerlink" title="软件截图"></a>软件截图</h2><p><img src="https://cdn.lvcshu.info/img/20190122001.jpg" alt=""></p><p><img src="https://cdn.lvcshu.info/img/20190122002.jpg" alt=""></p><p><img src="https://cdn.lvcshu.info/img/20190122003.jpg" alt=""></p><blockquote><p>Google play: <a href="https://play.google.com/store/apps/details?id=com.mc.miband1" target="_blank" rel="noopener">notify &amp; fitness for mi band</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;话说用了那么久小米手环，其实感觉还是比较不错的，唯一美中不足的就是小米手环的附属应用 &lt;code&gt;小米运动(mi fit)&lt;/code&gt;
    
    </summary>
    
    
      <category term="小米手环" scheme="https://blog.lvcshu.com/tags/%E5%B0%8F%E7%B1%B3%E6%89%8B%E7%8E%AF/"/>
    
      <category term="app推荐" scheme="https://blog.lvcshu.com/tags/app%E6%8E%A8%E8%8D%90/"/>
    
      <category term="notify &amp; fitness for mi band" scheme="https://blog.lvcshu.com/tags/notify-fitness-for-mi-band/"/>
    
  </entry>
  
  <entry>
    <title>真-多点部署博客</title>
    <link href="https://blog.lvcshu.com/2019/01/14/%E7%9C%9F-%E5%A4%9A%E7%82%B9%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/"/>
    <id>https://blog.lvcshu.com/2019/01/14/真-多点部署博客/</id>
    <published>2019-01-14T13:03:02.000Z</published>
    <updated>2019-03-09T05:45:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>emmmmm 众所周知由于中国的特殊情况使得中国的网络监管机制有别于外国，国内开展各项网络业务是需要经过备案的，而备案过程比较繁琐而且需要上传持证照，我是不太喜欢这个玩意儿的，所以我的博客也没备案。<br><a id="more"></a></p><p><img src="https://cdn.lvcshu.info/img/20190309001.jpg" alt="Photo by rawpixel on Unsplash"></p><h1 id="使用-CDN"><a href="#使用-CDN" class="headerlink" title="使用 CDN"></a>使用 CDN</h1><p>备案既有好处也有坏处，备案了以后国内的各种云服务是没有限制的，包括阿里云、腾讯云各种云的位于国机房的服务器都可以用来搭网站，还可以使用国内的 CDN 服务。但是我的博客没备案阿…所以之前一直是使用的 DO 美国服务器，备案是不需要了，但网络世界不会忽略物理中对光的速度限制，延迟<del>坏的很</del>大的很，所以就琢磨着用一下 CDN ( <strong>C</strong>ontent <strong>D</strong>elivery <strong>N</strong>etwork 内容分发网络 ) 诶作为穷人的我当然是选择去 <del>白嫖</del>使用免费的 CDN 啦，我使用的是 <em>CloudFlare</em> 这个服务商，这个服务商真的是一言难尽，的确他的数据中心遍布世界，<strong>除了中国</strong> 所以就造成了 CloudFlare 的服务在中国显得不那么给力，后来我还是放弃了使用 CloudFlare 作为 CDN 的方案 <del>才不是因为 CloudFlare 要氪金才能使用自己证书这个原因</del> 反正后来就没用 CDN 了</p><p>也不是没有想过用其他家的 CDN 。就是要么贵要么比CloudFlare效果差。</p><h1 id="更换-DNS"><a href="#更换-DNS" class="headerlink" title="更换 DNS"></a>更换 DNS</h1><p>然后，这几天比较有空 <del>才不是我考试前摸鱼</del> 就想着换一下 DNS 解析提供商，之前是一直用的 CloudFlare 的 DNS 后来就算没使用 CDN 功能还继续在用，但是好像 CloudFlare 的 DNS <strong>在国内有些节点不知道被谁糟蹋了</strong>（狗头保命）使用体验不佳，所以就把 DNS 迁移到了 NS1。</p><h2 id="说说-NS1"><a href="#说说-NS1" class="headerlink" title="说说 NS1"></a>说说 NS1</h2><blockquote><p>NS1.com是国外一家提供专业的DNS域名解析服务商，除了付费的DNS域名解析外，还提供了免费的DNS域名解析套餐，免费额度为500k Queries 、50 Records 、1 Built-in Monitor 、1 Filter Chain 和NS1 API，基本上可以满足日常建站的需要了。<br>节选自 <a href="https://wzfou.com/ns1-dns/" target="_blank" rel="noopener">NS1 DNS域名解析使用-Master/Slave主从DNS和世界各地分区解析</a></p></blockquote><p>就是这样，看起来很专业，事实上也是很专业的。</p><p><img src="https://cdn.lvcshu.info/img/20190114002.png" alt=""></p><p>但是就是有一个比较麻烦的是注册的时候需要使用信用卡进行验证（好像是不支持银联的？） 反正我注册了。</p><p>功能特别丰富而且统计功能也很强大，现在用着最好用的工具就是他分区域解析了 <del>CloudXNS虽然说更加强大，但是也要持证照 #碎碎念</del></p><h2 id="分区域解析"><a href="#分区域解析" class="headerlink" title="分区域解析"></a>分区域解析</h2><p>emmmmm这样就很简单了，设置 DNS 亚洲请求返回香港的服务器，欧洲请求返回欧洲服务器，其他请求通通丢到美国服务器。</p><h1 id="网站同步"><a href="#网站同步" class="headerlink" title="网站同步"></a>网站同步</h1><p>其实更加好的选择是使用 nginx 反向代理 + 缓存，<del>但是我比较懒</del> 就用 git 来同步我的各种网站内容了，在 cron 写个定时任务美滋滋，要是详说下去就是个大坑了以后再说<del>（发出了鸽子的声音</del></p><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><p><a href="https://wzfou.com/ns1-dns/" target="_blank" rel="noopener">NS1 DNS域名解析使用-Master/Slave主从DNS和世界各地分区解析</a><br><a href="https://ns1.com/" target="_blank" rel="noopener">NS1.com</a><br><a href="https://blog.lvcshu.com/2018/08/07/%E5%8D%9A%E5%AE%A2%E5%8F%8C%E5%BC%80%EF%BC%8C%E9%81%BF%E5%85%8Doffline%E2%84%A2/">博客双开，避免offline™</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;emmmmm 众所周知由于中国的特殊情况使得中国的网络监管机制有别于外国，国内开展各项网络业务是需要经过备案的，而备案过程比较繁琐而且需要上传持证照，我是不太喜欢这个玩意儿的，所以我的博客也没备案。&lt;br&gt;
    
    </summary>
    
    
      <category term="折腾" scheme="https://blog.lvcshu.com/tags/%E6%8A%98%E8%85%BE/"/>
    
      <category term="博客" scheme="https://blog.lvcshu.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="DNS" scheme="https://blog.lvcshu.com/tags/DNS/"/>
    
      <category term="ns1" scheme="https://blog.lvcshu.com/tags/ns1/"/>
    
  </entry>
  
  <entry>
    <title>改进SSL证书相关策略</title>
    <link href="https://blog.lvcshu.com/2019/01/10/%E6%94%B9%E8%BF%9BSSL%E8%AF%81%E4%B9%A6%E7%9B%B8%E5%85%B3%E7%AD%96%E7%95%A5/"/>
    <id>https://blog.lvcshu.com/2019/01/10/改进SSL证书相关策略/</id>
    <published>2019-01-10T03:11:00.000Z</published>
    <updated>2019-01-10T13:40:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>自从使用了 docker 作为基础环境以后，我想着写一个能够服务进行统一集中管理的面板，一方面不想使用市面上使用比较广泛面板 <del>因为我做到他们不行啊啊啊</del>，一方面也算是一种练习吧<a id="more"></a></p><h1 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h1><p>抬头看下网站证书，yes！已经更换成泛域名证书啦~<br>简单的说下现在已经实现的 <del>满是bug的</del> 功能，证书分发，前文提过我是集中一个面板进行管理，面板中集成一个文件 <code>getcerfile.php</code> 可以直接访问（当然是有鉴权的啦，证书什么的不鉴权放公网会凉的），证书选用 Let’s 签发泛域名证书这样就不用考虑证书签发的时候解析到底解析到哪台服务器上去了 <del>不用造多轮子了，ye</del></p><h1 id="证书检测"><a href="#证书检测" class="headerlink" title="证书检测"></a>证书检测</h1><p>这一部分主要是受了  Axton 大佬的启发 详情看 <a href="https://flyhigher.top/develop/755.html" target="_blank" rel="noopener">这篇文章</a> ，加上本人比较弱，且目前暂时还不想用上数据库存数据，所以目前是用文件 + shell 进行证书检查工作 配合 php 输出为不那么难看的页面 并且嵌入在面板中。</p><p>效果图：</p><p><img src="https://i.loli.net/2019/01/10/5c36bc4ecd015.png" alt=""></p><p>emmmmmmmmm上传时发现自建图床好像出了问题。。考虑自己写一个？ <del>先咕咕咕为敬</del></p><p>代码如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">cat urlfile.list | <span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  touch <span class="string">"data/<span class="variable">$line</span>"</span></span><br><span class="line">  touch <span class="string">"data/<span class="variable">$line</span>.ca"</span></span><br><span class="line">  curl https://<span class="variable">$line</span> -v -s -o /dev/null 2&gt;<span class="string">"data/<span class="variable">$line</span>.ca"</span></span><br><span class="line">  datee=$(date +<span class="string">'%F %H:%M'</span>)</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"最后检查: "</span> <span class="variable">$datee</span> &gt; <span class="string">"data/<span class="variable">$line</span>"</span></span><br><span class="line"></span><br><span class="line">  data=$(cat <span class="string">"data/<span class="variable">$line</span>.ca"</span> | grep <span class="string">'subject:'</span>)</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"证书域名: "</span> <span class="variable">$&#123;data##* subject: &#125;</span> &gt;&gt; <span class="string">"data/<span class="variable">$line</span>"</span></span><br><span class="line"></span><br><span class="line">  data=$(cat <span class="string">"data/<span class="variable">$line</span>.ca"</span> | grep <span class="string">'start date:'</span>)</span><br><span class="line">  data=$(date -d <span class="string">"<span class="variable">$&#123;data##* start date: &#125;</span>"</span> +<span class="string">'%F %H:%M:%S'</span>)</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"签发日期: "</span><span class="variable">$&#123;data&#125;</span> &gt;&gt; <span class="string">"data/<span class="variable">$line</span>"</span></span><br><span class="line">  startdate=<span class="variable">$data</span></span><br><span class="line"></span><br><span class="line">  data=$(cat <span class="string">"data/<span class="variable">$line</span>.ca"</span> | grep <span class="string">'expire date: '</span>)</span><br><span class="line">  data=$(date -d <span class="string">"<span class="variable">$&#123;data##* expire date: &#125;</span>"</span> +<span class="string">'%F %H:%M:%S'</span>)</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"失效日期: "</span> <span class="variable">$data</span> &gt;&gt; <span class="string">"data/<span class="variable">$line</span>"</span></span><br><span class="line">  enddate=<span class="variable">$data</span></span><br><span class="line"></span><br><span class="line">  data=$(cat <span class="string">"data/<span class="variable">$line</span>.ca"</span> | grep <span class="string">'issuer: '</span>)</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"签发机构: "</span><span class="variable">$&#123;data##* issuer: &#125;</span> &gt;&gt; <span class="string">"data/<span class="variable">$line</span>"</span></span><br><span class="line"></span><br><span class="line">  data=$(cat <span class="string">"data/<span class="variable">$line</span>.ca"</span> | grep <span class="string">'SSL certificate verify ok.'</span>)</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"证书状态: "</span><span class="variable">$&#123;data##* &#125;</span> &gt;&gt; <span class="string">"data/<span class="variable">$line</span>"</span></span><br><span class="line"></span><br><span class="line">  startdate=$(date -d <span class="string">"<span class="variable">$&#123;startdate&#125;</span>"</span> +%s)</span><br><span class="line">  enddate=$(date -d <span class="string">"<span class="variable">$&#123;enddate&#125;</span>"</span> +%s)</span><br><span class="line">  datee=$(date -d <span class="string">"<span class="variable">$&#123;datee&#125;</span>"</span> +%s)</span><br><span class="line"></span><br><span class="line">  long=$((<span class="variable">$enddate</span>-<span class="variable">$startdate</span>))</span><br><span class="line">  datee=$((<span class="variable">$datee</span>-<span class="variable">$startdate</span>))</span><br><span class="line">  datee=$((<span class="variable">$datee</span>*100))</span><br><span class="line">  hundred=100</span><br><span class="line">  persent=$((<span class="variable">$datee</span>/<span class="variable">$long</span>))</span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"&lt;div class=\"mdui-progress\"&gt;&lt;div class=\"mdui-progress-determinate\" style=\"width: <span class="variable">$&#123;persent&#125;</span>%;\"&gt;&lt;/div&gt;&lt;/div&gt;"</span> &gt;&gt; <span class="string">"data/<span class="variable">$line</span>"</span></span><br><span class="line"></span><br><span class="line">  rm <span class="string">"data/<span class="variable">$line</span>.ca"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p><p>展示的代码如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">include_once</span> <span class="string">'config.php'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($_COOKIE[<span class="string">"user"</span>] == md5($username.$userpasswd)) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">'&lt;div class="mdui-panel" mdui-panel&gt;'</span>;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">listDir</span><span class="params">($dir)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (is_dir($dir)) &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> ($dh = opendir($dir)) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">while</span> (($file = readdir($dh)) !== <span class="keyword">false</span>) &#123;</span></span><br><span class="line"><span class="php">                    <span class="keyword">if</span> ($file != <span class="string">"."</span> &amp;&amp; $file != <span class="string">".."</span>) &#123;</span></span><br><span class="line"><span class="php">                        <span class="keyword">echo</span> <span class="string">'&lt;div class="mdui-panel-item"&gt;'</span>;</span></span><br><span class="line"><span class="php">                        <span class="keyword">echo</span> <span class="string">'&lt;div class="mdui-panel-item-header"&gt;'</span>.<span class="string">'&lt;div class="mdui-panel-item-title"&gt;'</span>.$file.<span class="string">'&lt;/div&gt;'</span>.<span class="string">'&lt;i class="mdui-panel-item-arrow mdui-icon material-icons"&gt;keyboard_arrow_down&lt;/i&gt;'</span>.<span class="string">'&lt;/div&gt;'</span>;</span></span><br><span class="line"><span class="php">                        <span class="keyword">echo</span> <span class="string">'&lt;div class="mdui-panel-item-body"&gt;'</span>;</span></span><br><span class="line"><span class="php">                        $myfile = fopen(<span class="string">"$dir/$file"</span>, <span class="string">"r"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to open file!"</span>);</span></span><br><span class="line"><span class="php">                        <span class="keyword">while</span> (!feof($myfile)) &#123;</span></span><br><span class="line"><span class="php">                            <span class="keyword">echo</span> <span class="string">'&lt;p&gt;'</span>.fgets($myfile) . <span class="string">'&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">                        &#125;</span></span><br><span class="line"><span class="php">                        <span class="keyword">echo</span> <span class="string">'&lt;/div&gt;&lt;/div&gt;'</span>;</span></span><br><span class="line"><span class="php">                        fclose($myfile);</span></span><br><span class="line"><span class="php">                    &#125;</span></span><br><span class="line"><span class="php">                &#125;</span></span><br><span class="line"><span class="php">                closedir($dh);</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> $dir . <span class="string">'&lt;br&gt;'</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    listDir(<span class="string">"./data"</span>);</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">'&lt;/div&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">'error'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p><h1 id="证书分发"><a href="#证书分发" class="headerlink" title="证书分发"></a>证书分发</h1><p>emmmm上面也看的出来我是用 user 和 passwd md5一下写进cookie进行验证的，需要验证的 域名直接存放在 <code>urlfile.list</code> 文件里面 (我实在是太菜了)</p><p>同理分发证书也利用 cookie 进行身份验证</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">include_once</span> <span class="string">'config.php'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($_COOKIE[<span class="string">"user"</span>] == md5($username.$userpasswd)) &#123;</span></span><br><span class="line"><span class="php">    $myfile = fopen($_GET[<span class="string">'file'</span>], <span class="string">"r"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to open file!"</span>);</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> fread($myfile, filesize($_GET[<span class="string">'file'</span>]));</span></span><br><span class="line"><span class="php">    fclose($myfile);</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    header(<span class="string">"Location: /index.php"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>然后直接读取证书文件进行直接输出，同时 nginx 那儿对文件目录进行权限控制，获取证书使用</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http<span class="variable">s:</span>//****/getcerfile.php?<span class="keyword">file</span>=ssl/lvcshu.<span class="keyword">com</span>/lvcshu.<span class="keyword">com</span>.key -H <span class="string">'cookie: user=？？？'</span> &gt; lvcshu.<span class="keyword">com</span>.key</span><br></pre></td></tr></table></figure><p>获取，这样在需要部署证书服务器上定时执行脚本可以更新证书了，同时 泛域名证书 使用 acme.sh 进行自动续期 emmmmmmmm 差不多这样如各位大佬发现什么不妥地方记得及时联系我啊 QAQ<br>Telegram:<a href="https://t.me/johnpoint" target="_blank" rel="noopener">@johnpoint</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自从使用了 docker 作为基础环境以后，我想着写一个能够服务进行统一集中管理的面板，一方面不想使用市面上使用比较广泛面板 &lt;del&gt;因为我做到他们不行啊啊啊&lt;/del&gt;，一方面也算是一种练习吧
    
    </summary>
    
    
      <category term="折腾" scheme="https://blog.lvcshu.com/tags/%E6%8A%98%E8%85%BE/"/>
    
      <category term="建站" scheme="https://blog.lvcshu.com/tags/%E5%BB%BA%E7%AB%99/"/>
    
      <category term="SSL检测" scheme="https://blog.lvcshu.com/tags/SSL%E6%A3%80%E6%B5%8B/"/>
    
      <category term="证书分发" scheme="https://blog.lvcshu.com/tags/%E8%AF%81%E4%B9%A6%E5%88%86%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>2018年度简报</title>
    <link href="https://blog.lvcshu.com/2018/12/25/2018%E5%B9%B4%E5%BA%A6%E7%AE%80%E6%8A%A5/"/>
    <id>https://blog.lvcshu.com/2018/12/25/2018年度简报/</id>
    <published>2018-12-25T08:47:00.000Z</published>
    <updated>2019-01-22T13:42:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>首先 圣诞快乐~<br>转眼间啊，2018年就快要过去了，是时候来 <del>水</del> 写一篇年终总结了<br><a id="more"></a></p><h1 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h1><h2 id="这一年学了什么？"><a href="#这一年学了什么？" class="headerlink" title="这一年学了什么？"></a>这一年学了什么？</h2><ul><li>apache</li><li>PHP</li><li>javacript</li><li>SQL</li><li>docker</li></ul><h2 id="成果？"><a href="#成果？" class="headerlink" title="成果？"></a>成果？</h2><p>emmmmmmmm好像也没有什么成果可以出来说的，就简单的定制了几个 docker 并且写成了 docker-compose 使得我在部署服务器的时候能够更加方便，然后时间也比之前采用的脚本的编译安装要大大缩短，<del>以后重装服务器就更加肆无忌惮了</del></p><p>同时，初步的尝试使用 N2Nv2 的 peer to peer VPN 把所有的服务器链接成一个大内网，以后有什么证书之类的文件就可以通过内网进行传输了，并且我的电脑也连上了这个内网，使得我在外面（不在电脑身边）也能通过连接上我任意一台 VPS 来链接我的电脑。但是目前只是刚刚开始部署，估计完全搞定得到 2019 年了….</p><p>还有这个！<br>求star！！<br><a href="https://github.com/johnpoint/anti-360browser.js" target="_blank" rel="noopener">johnpoint/anti-360browser.js</a></p><h1 id="GIthub-的一年"><a href="#GIthub-的一年" class="headerlink" title="GIthub 的一年"></a>GIthub 的一年</h1><p><img src="https://i.loli.net/2018/12/31/5c29bf6820a6c.png" alt="github.com_johnpoint_tab=overview&amp;from=2018-01-01&amp;to=2018-01-31(iPhone 5_SE).png"></p><p>那么 2019 加油哇~<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  __     __   ___   ___  _  ___   __  </span><br><span class="line"> / /    / / |<span class="string">___ \ / _ \/ </span>|<span class="string">( _ )  \ \</span></span><br><span class="line"><span class="string">/ /    / /    __) </span>|<span class="string"> </span>|<span class="string"> </span>|<span class="string"> </span>|<span class="string"> </span>|<span class="string">/ _ \   \ \</span></span><br><span class="line"><span class="string">\ \   / /    / __/</span>|<span class="string"> </span>|<span class="string">_</span>|<span class="string"> </span>|<span class="string"> </span>|<span class="string"> (_) </span>|<span class="string">  / /</span></span><br><span class="line"><span class="string"> \_\ /_/    </span>|<span class="string">_____</span>|<span class="string">\___/</span>|<span class="string">_</span>|<span class="string">\___/  /_/</span></span><br></pre></td></tr></table></figure></p><hr><h1 id="2019-计划"><a href="#2019-计划" class="headerlink" title="2019 计划"></a>2019 计划</h1><ul><li>预习JAVA</li><li>把 业余无线电牌照 考到手</li><li>继续学习算法知识</li><li>待定…</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先 圣诞快乐~&lt;br&gt;转眼间啊，2018年就快要过去了，是时候来 &lt;del&gt;水&lt;/del&gt; 写一篇年终总结了&lt;br&gt;
    
    </summary>
    
    
      <category term="总结" scheme="https://blog.lvcshu.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="2018" scheme="https://blog.lvcshu.com/tags/2018/"/>
    
      <category term="2019" scheme="https://blog.lvcshu.com/tags/2019/"/>
    
      <category term="简报" scheme="https://blog.lvcshu.com/tags/%E7%AE%80%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>学习笔记:初识httpd</title>
    <link href="https://blog.lvcshu.com/2018/11/02/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0:%E5%88%9D%E8%AF%86httpd/"/>
    <id>https://blog.lvcshu.com/2018/11/02/学习笔记:初识httpd/</id>
    <published>2018-11-02T01:49:57.000Z</published>
    <updated>2018-12-29T11:08:13.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>提醒：这只是一篇学习笔记，不保证语句通顺，仅作记录。</p></blockquote><a id="more"></a><h1 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h1><h2 id="安装-httpd、php、mysql"><a href="#安装-httpd、php、mysql" class="headerlink" title="安装 httpd、php、mysql"></a>安装 httpd、php、mysql</h2><ul><li>建立 <strong>两个</strong> 虚拟主机建立网站，并申请 <strong>SSL</strong> 使其能够通过 <strong>https</strong> 访问</li></ul><h2 id="学习过程"><a href="#学习过程" class="headerlink" title="学习过程"></a>学习过程</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> https://mirrors.ustc.edu.cn/epel/epel-<span class="keyword">release</span>-latest<span class="number">-6.</span>noarch.rpm https://mirrors.ustc.edu.cn/remi/<span class="keyword">enterprise</span>/remi-<span class="keyword">release</span><span class="number">-6.</span>rpm</span><br><span class="line"></span><br><span class="line">yum -y <span class="keyword">install</span> yum-utils</span><br><span class="line">yum-config-manager <span class="comment">--enable remi-php72</span></span><br><span class="line"></span><br><span class="line">yum -y <span class="keyword">install</span> httpd  mysql  mysql-<span class="keyword">server</span>  mysql-connector-odbc  mysql-devel  libdbi-dbd-mysql  openssl  mod_ssl  httpd-<span class="keyword">manual</span>  mod_ssl  mod_perl  mod_auth_mysql</span><br><span class="line"></span><br><span class="line">yum -y <span class="keyword">install</span> php  php-mcrypt  php-cli  php-gd  php-curl  php-mysql  php-zip  php-fileinfo  php-fpm  php-<span class="keyword">xml</span>  php-mbstring  php-ldap  php-xmlrpc  php-devel</span><br></pre></td></tr></table></figure><p>设置开机启动</p><p>chkconfig httpd on<br>chkconfig mysqld on<br>建立虚拟主机文件夹<br>cd /home<br>mkdir www<br>修改httpd配置文件<br>cd /etc/httpd/conf<br>vi httpd.conf<br>加入</p><p>Include /home/www/vhost.conf<br>解析域名<br>略</p><p>新建虚拟主机<br>建立虚拟主机路径<br>cd /home/www<br>mkdir hk.lvcshu.info<br>新建虚拟主机配置<br>vi vhost.conf<br>写入</p><virtualhost *:80=""><br>    DocumentRoot /home/www/hk.lvcshu.info<br>    ServerName hk.lvcshu.info<br>    RewriteEngine on<br>    RewriteCond %{SERVER_PORT} !^443<br>    RewriteRule ^(.*)?$ https://%{SERVER_NAME}/$1 [R=permanent,L]<br></virtualhost><p><directory "="" home="" www="" hk.lvcshu.info"=""><br>    Options Indexes FollowSymLinks<br>    AllowOverride all<br>    Order Deny,Allow<br>    Deny from none<br>    Allow from all<br></directory><br>建立一个简陋的主页<br>略</p><p>申请证书<br>使用 acme.sh 的开源项目</p><p>curl  <a href="https://get.acme.sh" target="_blank" rel="noopener">https://get.acme.sh</a> | sh</p><p>cd .acme.sh<br>acme.sh  –issue  -d hk.lvcshu.info –webroot  /home/www/hk.lvcshu.info/<br>证书路径：/root/.acme.sh/hk.lvcshu.info</p><p>SSLCertificateFile        /root/.acme.sh/hk.lvcshu.info/hk.lvcshu.info.cer<br>SSLCertificateKeyFile     /root/.acme.sh/hk.lvcshu.info/hk.lvcshu.info.key<br>配置 https</p><p><virtualhost *:443=""><br>DocumentRoot   /home/www/hk.lvcshu.info<br>ServerName     hk.lvcshu.info<br>SSLEngine      on<br>SSLCertificateFile        /root/.acme.sh/hk.lvcshu.info/hk.lvcshu.info.cer<br>SSLCertificateKeyFile     /root/.acme.sh/hk.lvcshu.info/hk.lvcshu.info.key<br></virtualhost><br>return 0;</p><p>更新：</p><p>其实有一个更加好的虚拟主机的管理方法，那就是一个网站用一个配置文件来管理，在配置文件 httpd.conf 中直接引入 /home/www/vhost/* 即可</p><p>例如在 <code>/home/www/vhost</code> 中 <code>hk.lvcshu.info.dom</code> 即为 <code>hk.lvcshu.info</code> 的配置文件。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;提醒：这只是一篇学习笔记，不保证语句通顺，仅作记录。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="折腾" scheme="https://blog.lvcshu.com/tags/%E6%8A%98%E8%85%BE/"/>
    
      <category term="httpd" scheme="https://blog.lvcshu.com/tags/httpd/"/>
    
      <category term="学习笔记" scheme="https://blog.lvcshu.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>树莓派 docker 搭建 pi-dashboard</title>
    <link href="https://blog.lvcshu.com/2018/10/21/%E6%A0%91%E8%8E%93%E6%B4%BE-docker-%E6%90%AD%E5%BB%BA-pi-dashboard/"/>
    <id>https://blog.lvcshu.com/2018/10/21/树莓派-docker-搭建-pi-dashboard/</id>
    <published>2018-10-20T21:40:21.000Z</published>
    <updated>2018-12-24T16:18:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>前一阵子我入手了一（台？）（个？）树莓派，但是一直都没有时间研究该用来做什么…. 然后无意间看见了一个叫做pi-dashboard 的小玩意儿 上一张图看看<br><a id="more"></a><br><img src="https://cdn.lvcshu.info/img/upload/1812/a6430c02dba0e979.png" alt=""><br>就是这样，性能看起来就比较方便了</p><h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><p>这里参考的是<a href="https://yeasy.gitbooks.io/docker_practice/install/raspberry-pi.html" target="_blank" rel="noopener">docker 中文文档</a>的安装过程<br>诶，用官方脚本一步搞定嘞<br><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">curl </span>-<span class="string">fsSL </span><span class="string">get.</span><span class="string">docker.</span><span class="string">com </span>-o <span class="built_in">get-docker.sh</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="string">sh </span><span class="built_in">get-docker.sh</span> <span class="built_in">--mirror</span> <span class="string">Aliyun</span></span><br></pre></td></tr></table></figure></p><p>很快的。。。</p><h1 id="使用docker一步搞定-pi-dashboard"><a href="#使用docker一步搞定-pi-dashboard" class="headerlink" title="使用docker一步搞定 pi-dashboard"></a>使用docker一步搞定 pi-dashboard</h1><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -d --<span class="built_in">name</span> docker-<span class="literal">pi</span>-dashboard -e <span class="string">'LISTEN=1024'</span> --net=host ecat/docker-<span class="literal">pi</span>-dashboard</span><br></pre></td></tr></table></figure><p>来自<a href="https://zhuanlan.zhihu.com/p/34923907" target="_blank" rel="noopener">一键部署pi dashboard</a></p><p>好了，就这么水完了…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前一阵子我入手了一（台？）（个？）树莓派，但是一直都没有时间研究该用来做什么…. 然后无意间看见了一个叫做pi-dashboard 的小玩意儿 上一张图看看&lt;br&gt;
    
    </summary>
    
    
      <category term="树莓派" scheme="https://blog.lvcshu.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
      <category term="docker" scheme="https://blog.lvcshu.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 安装 thinkpad S2 无线网卡驱动</title>
    <link href="https://blog.lvcshu.com/2018/08/25/Ubuntu%E5%AE%89%E8%A3%85-thinkpad-S2-%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8/"/>
    <id>https://blog.lvcshu.com/2018/08/25/Ubuntu安装-thinkpad-S2-无线网卡驱动/</id>
    <published>2018-08-25T08:58:00.000Z</published>
    <updated>2018-12-25T09:04:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近入手了一台 thinkpad S2 ，打开 windows 系统，觉得缺了点什么，于是连忙把 ubuntu 系统也安装了上去，但是在配置 ubuntu 系统的时候并没有让我连接网络的选项，当时就感觉有些奇怪<a id="more"></a>，但是没有放在心上。安装完成后打开 <em>ubuntu</em> 系统发现系统 <strong>根本没有</strong> 检测到无线网卡的存在，于是我就慌了，赶紧回到 <em>windows</em> 系统，看见了无线网卡的型号<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Realtek 8821CE<span class="built_in"> Wireless LAN </span>802.11ac PCI-E NIC</span><br></pre></td></tr></table></figure></p><p>于是使用强大的 <del>百度</del> <strong>google</strong> 搜索解决办法，最后在 ubuntu论坛 的<a href="http://forum.ubuntu.org.cn/viewtopic.php?f=116&amp;t=485936" target="_blank" rel="noopener">这个帖子</a>里发现了解决办法。</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>由<a href="http://forum.ubuntu.org.cn/viewtopic.php?f=116&amp;t=485936" target="_blank" rel="noopener">这个帖子里</a>的大佬在<a href="https://unix.stackexchange.com/questions/379049/realtek-wifi-driver-problem-in-linux-mint-18-2" target="_blank" rel="noopener">这里</a>请教到的大佬给出解决方法</p><p>原文如下：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Worked solution (Requirements: kernel &gt;=<span class="number">4.11</span>) :</span><br><span class="line"></span><br><span class="line">(UPD: In <span class="keyword">the</span> latest release <span class="keyword">of</span> endlessm you need kernel <span class="built_in">version</span> <span class="number">4.15</span>)</span><br><span class="line"></span><br><span class="line">Download driver <span class="built_in">directory</span> <span class="built_in">from</span> this repo: <span class="keyword">https</span>://github.com/endlessm/linux/tree/master/drivers/net/wireless/rtl8821ce</span><br><span class="line">You can <span class="built_in">do</span> <span class="keyword">it</span> <span class="keyword">by</span> this link: <span class="keyword">https</span>://minhaskamal.github.io/DownGit/<span class="comment">#/home?url=https://github.com/endlessm/linux/tree/master/drivers/net/wireless/rtl8821ce</span></span><br><span class="line"></span><br><span class="line">Unpack zip archive.</span><br><span class="line">Change <span class="keyword">the</span> Makefile. Line <span class="string">"export TopDIR ?= ..."</span> <span class="built_in">to</span> export <span class="string">"TopDIR ?= PATH TO EXTRACTED DIRECTORY"</span>.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ make</span><br><span class="line">$ sudo make install</span><br><span class="line">$ sudo modprobe -<span class="keyword">a</span> <span class="number">8821</span>ce</span><br></pre></td></tr></table></figure></p><p>至此，完美解决了这个问题</p><h1 id="一点小问题"><a href="#一点小问题" class="headerlink" title="一点小问题"></a>一点小问题</h1><p>在某次 ubuntu 的内核升级了以后，我发现我的无线网卡驱动 <strong>又没了</strong> <del>马上扔掉电脑</del> 于是我想到了使用脚本进行安装，这样就可以在下一次遇到这样的问题时快速解决！</p><p>脚本内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">mv rtl8821ce.zip /home/johnpoint</span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">unzip rtl8821ce.zip</span><br><span class="line"><span class="built_in">cd</span> rtl8821ce</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line">sudo modprobe -a 8821ce</span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure></p><p>撒花</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近入手了一台 thinkpad S2 ，打开 windows 系统，觉得缺了点什么，于是连忙把 ubuntu 系统也安装了上去，但是在配置 ubuntu 系统的时候并没有让我连接网络的选项，当时就感觉有些奇怪
    
    </summary>
    
    
      <category term="Ubuntu" scheme="https://blog.lvcshu.com/tags/Ubuntu/"/>
    
      <category term="thinkpad S2" scheme="https://blog.lvcshu.com/tags/thinkpad-S2/"/>
    
  </entry>
  
  <entry>
    <title>密码管理器是好文明</title>
    <link href="https://blog.lvcshu.com/2018/08/24/%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8%E6%98%AF%E5%A5%BD%E6%96%87%E6%98%8E/"/>
    <id>https://blog.lvcshu.com/2018/08/24/密码管理器是好文明/</id>
    <published>2018-08-24T00:26:36.000Z</published>
    <updated>2018-12-25T09:10:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>密码一直以来是人们帐号的一个薄弱点，通过各种各样的途径，想要获取他人密码的人总能获取到另他们满意的信息，<a id="more"></a>而人们喜欢利用自己个人信息的组合作为密码立下了汗马功劳，而一些人对于密码重要性毫不了解从而设下简单密码的人也功不可没，而我，一直以来使用的是一串字符串所生成 md5 来作为我帐号的密码，自认为十分安全，实则不然，因为密码中只含有小写字母和数字，是可以实现暴力破解的。加上一些特殊符号的密码是目前为止相对安全的密码解决方案，但是 <strong>复杂的密码太难记了啊</strong> 这该咋办，直到某群大佬说出了 <strong>密码管理器是好文明（）</strong> 我才发现原来早就有人想到解决方案了。</p><p>目前，网络上流行的有四款密码管理器：</p><ul><li>KeePass：免费 开源 兼容性强</li><li>LastPass：最大的优势是跨浏览器平台</li><li>1Password：跨平台管理 用户认可度高</li><li>Enpass：支持平台多 20条密码免费</li></ul><p>而其中，我第一时间试用了 LastPass 发现多设备使用需要高级版本授权，而授权居然需要 VISA卡 （我没有啊啊啊啊） ，于是舍弃。后来我看见了开源解决方案 KeePass 在经过一段时间的使用之后，觉得用起来十分舒服，而且支持 Linux 、Windows 和手机系统，而且支持 Webdav ，这在自己已经搭建了网盘的人来说简直就是太爽了，不用担心密码存放在别人手里而不安全，但是安全设施一定要做好。</p><p>KeePass 同样采用了主流的一个主密码打开密码数据库文件的模式，这时，这个主密码就代表了你的所有密码，需要尽可能的兼顾复杂与你的好记，这就是唯一需要做的。至于其他密码，KeePass 提供了随机密码生成器，能自定义生成密码包含 字母、符号、特殊字符等内容，还可以自定义长度，总之就是非常爽就是了。</p><p>在用上 KeePass 的那一晚，我就把每一个可以想起来的帐号都改成了自动生成的强密码，感觉自己的帐号安全提升了不止一点半点，美滋滋～</p><p>赶快去尝试下咯～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;密码一直以来是人们帐号的一个薄弱点，通过各种各样的途径，想要获取他人密码的人总能获取到另他们满意的信息，
    
    </summary>
    
    
      <category term="密码管理器" scheme="https://blog.lvcshu.com/tags/%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8/"/>
    
      <category term="Keepass" scheme="https://blog.lvcshu.com/tags/Keepass/"/>
    
      <category term="安全" scheme="https://blog.lvcshu.com/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>博客双开，避免offline™</title>
    <link href="https://blog.lvcshu.com/2018/08/07/%E5%8D%9A%E5%AE%A2%E5%8F%8C%E5%BC%80%EF%BC%8C%E9%81%BF%E5%85%8Doffline%E2%84%A2/"/>
    <id>https://blog.lvcshu.com/2018/08/07/博客双开，避免offline™/</id>
    <published>2018-08-06T21:30:37.000Z</published>
    <updated>2018-12-24T16:18:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>怎么双开博客呢？<br>答案就是—— vps 与 github 一起部署。。。<br><a id="more"></a><br>好吧，我承认我是标题党了一下，主要是记录一下我 成功部署 完 hexo 博客了以后如何将博客部署到 github 上去。</p><h1 id="创建远程仓库"><a href="#创建远程仓库" class="headerlink" title="创建远程仓库"></a>创建远程仓库</h1><p>就是在 github 上创建一个名称为 用户名.github.io 的仓库，这一个仓库可以在自动化部署之后在 用户名.github.io 生成博客，而用 github 在全世界（除中国大陆，中国大陆就是互联网上的孤岛）外厉害的 cdn ，我们的博客访问速度会比较快， 注意，一开始我是选择不初始化仓库，这样可以避免一些莫名奇妙的坑！</p><h1 id="修改-站点配置"><a href="#修改-站点配置" class="headerlink" title="修改 站点配置"></a>修改 站点配置</h1><p>在 站点根目录 下的 <code>_config.yml</code> 寻找 <code>deploy</code> 关键词，将其 整部分 修改为：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol">  type:</span> git</span><br><span class="line"><span class="symbol">  repo:</span> GitHub上仓库的完整路径包括 .git</span><br><span class="line"><span class="symbol">  branch:</span> master</span><br></pre></td></tr></table></figure></p><p>repo 的链接一定要是 ssh 而不是 https 的！！！</p><h1 id="配置-git"><a href="#配置-git" class="headerlink" title="配置 git"></a>配置 git</h1><p>生成 ssh 密钥<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--global user.name <span class="string">"你的GitHub用户名"</span></span><br><span class="line">git<span class="built_in"> config </span>--global user.email <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure></p><p>生成ssh密钥文件：<br><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -<span class="built_in">t</span> rsa -C <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure></p><p>然后直接三个回车即可，默认不需要设置密码<br>然后找到生成的 .ssh 的文件夹中的 <code>id_rsa.pub</code> 密钥，将内容全部复制</p><p>打开 GitHub_Settings_keys 页面，新建 <code>new SSH Key</code></p><p><code>Title</code> 为标题，任意填即可，将刚刚复制的 <code>id_rsa.pub</code> 内容粘贴进去，最后点击 <code>Add SSH key</code>。</p><p>大功告成！</p><blockquote><p>以上部分内容来自 <a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">GitHub+Hexo 搭建个人网站详细教程</a></p></blockquote><p>推送博客至 github<br>好了，我们使用下面的一条指令就可以将博客推送到 github 上，实现某些意义上的 neveroffline™ 了！</p><p>撒花～～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;怎么双开博客呢？&lt;br&gt;答案就是—— vps 与 github 一起部署。。。&lt;br&gt;
    
    </summary>
    
    
      <category term="Github" scheme="https://blog.lvcshu.com/tags/Github/"/>
    
      <category term="折腾" scheme="https://blog.lvcshu.com/tags/%E6%8A%98%E8%85%BE/"/>
    
      <category term="git" scheme="https://blog.lvcshu.com/tags/git/"/>
    
      <category term="blog" scheme="https://blog.lvcshu.com/tags/blog/"/>
    
  </entry>
  
</feed>
